// Generated by Dagger (https://dagger.dev).
package com.example.quizapp.ui.viewmodels;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import java.util.List;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class QuestionsViewModel_MembersInjector implements MembersInjector<QuestionsViewModel> {
  private final Provider<List<String>> offlineQuestionsProvider;

  public QuestionsViewModel_MembersInjector(Provider<List<String>> offlineQuestionsProvider) {
    this.offlineQuestionsProvider = offlineQuestionsProvider;
  }

  public static MembersInjector<QuestionsViewModel> create(
      Provider<List<String>> offlineQuestionsProvider) {
    return new QuestionsViewModel_MembersInjector(offlineQuestionsProvider);
  }

  @Override
  public void injectMembers(QuestionsViewModel instance) {
    injectOfflineQuestions(instance, offlineQuestionsProvider.get());
  }

  @InjectedFieldSignature("com.example.quizapp.ui.viewmodels.QuestionsViewModel.offlineQuestions")
  public static void injectOfflineQuestions(QuestionsViewModel instance,
      List<String> offlineQuestions) {
    instance.offlineQuestions = offlineQuestions;
  }
}
